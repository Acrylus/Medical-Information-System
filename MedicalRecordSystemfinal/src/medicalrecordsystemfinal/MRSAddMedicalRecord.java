/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package medicalrecordsystemfinal;

import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anton Joseph Cruz
 */
public class MRSAddMedicalRecord extends javax.swing.JFrame {

    /**
     * Creates new form MRSAddRecord
     */
    DefaultTableModel tblMedicine, tblPrescription;
    Connect con;
    User u;
    int patientID;
    int indexPrescription, indexMedicine;    
    ArrayList<PrescriptionMedicine> medicineList = new ArrayList<>();
    
    public MRSAddMedicalRecord() {
        initComponents();
    }
    
    public MRSAddMedicalRecord(User user, int patientID) {
        initComponents();
        setLocationRelativeTo(null);
        tblMedicine = (DefaultTableModel) jTableMedicine.getModel();
        tblPrescription = (DefaultTableModel) jTablePrescription.getModel();
        con = new Connect();
        u = user;
        this.patientID = patientID;
        lblPatientID.setText(Integer.toString(patientID));
        displayMedicine();
    }
    
    private void displayMedicine(){
        ArrayList<Medicine> ver = con.getMedicine();
        tblMedicine.setRowCount(0);
        for(Medicine v : ver){
            //String data[]={v.getMedicineID(),v.getGenericName(),v.getBrandName()};
            String data[]={v.getGenericName(),v.getBrand(),v.getDosage()};
            tblMedicine.addRow(data);
        }
    }
    
    private void displayPrescription(){
        tblPrescription.setRowCount(0);
        for(PrescriptionMedicine m : medicineList){
            String data[]={m.getGenericName() + "-" + m.getBrand(), m.getDosage(), String.format("%d",m.getQuantity())};
            tblPrescription.addRow(data);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BackB = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnAddMedicine = new javax.swing.JButton();
        btnDeleteMedicine = new javax.swing.JButton();
        btnSearchMedicine = new javax.swing.JButton();
        txtSearchMedicine = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMedicine = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDiagnosis = new javax.swing.JTextField();
        txtTreatment = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnAddRecord = new javax.swing.JButton();
        btnReload = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePrescription = new javax.swing.JTable();
        lblPatientID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        BackB.setBackground(new java.awt.Color(255, 0, 0));
        BackB.setForeground(new java.awt.Color(255, 255, 255));
        BackB.setText("Back");
        BackB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 0, 0));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAddMedicine.setBackground(new java.awt.Color(255, 0, 0));
        btnAddMedicine.setText("Add Medicine");
        btnAddMedicine.setEnabled(false);
        btnAddMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMedicineActionPerformed(evt);
            }
        });

        btnDeleteMedicine.setBackground(new java.awt.Color(255, 0, 0));
        btnDeleteMedicine.setText("Delete Medicine");
        btnDeleteMedicine.setEnabled(false);
        btnDeleteMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMedicineActionPerformed(evt);
            }
        });

        btnSearchMedicine.setBackground(new java.awt.Color(255, 0, 0));
        btnSearchMedicine.setText("Search");
        btnSearchMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMedicineActionPerformed(evt);
            }
        });

        txtSearchMedicine.setBackground(new java.awt.Color(244, 191, 191));
        txtSearchMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchMedicineActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Medicine");

        jTableMedicine.setBackground(new java.awt.Color(244, 191, 191));
        jTableMedicine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Generic Name", "Brand ", "Dosage"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMedicine.getTableHeader().setReorderingAllowed(false);
        jTableMedicine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMedicineMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableMedicine);
        if (jTableMedicine.getColumnModel().getColumnCount() > 0) {
            jTableMedicine.getColumnModel().getColumn(0).setResizable(false);
            jTableMedicine.getColumnModel().getColumn(1).setResizable(false);
            jTableMedicine.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Diagnosis");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Treatment");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Prescription Medicine");

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 30)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("ADD MEDICAL RECORD");

        txtDiagnosis.setBackground(new java.awt.Color(244, 191, 191));
        txtDiagnosis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiagnosisActionPerformed(evt);
            }
        });

        txtTreatment.setBackground(new java.awt.Color(244, 191, 191));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Patient ID");

        btnAddRecord.setBackground(new java.awt.Color(255, 0, 0));
        btnAddRecord.setForeground(new java.awt.Color(255, 255, 255));
        btnAddRecord.setText("Add Record");
        btnAddRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRecordActionPerformed(evt);
            }
        });

        btnReload.setBackground(new java.awt.Color(255, 0, 0));
        btnReload.setText("âŸ³");
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        jTablePrescription.setBackground(new java.awt.Color(244, 191, 191));
        jTablePrescription.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine", "Dosage", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePrescription.getTableHeader().setReorderingAllowed(false);
        jTablePrescription.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePrescriptionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePrescription);
        if (jTablePrescription.getColumnModel().getColumnCount() > 0) {
            jTablePrescription.getColumnModel().getColumn(0).setResizable(false);
            jTablePrescription.getColumnModel().getColumn(1).setResizable(false);
            jTablePrescription.getColumnModel().getColumn(2).setResizable(false);
        }

        lblPatientID.setBackground(new java.awt.Color(244, 191, 191));
        lblPatientID.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(434, 434, 434))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(BackB, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(btnAddMedicine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDeleteMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblPatientID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtSearchMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSearchMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnReload))))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(319, 319, 319))
                                    .addComponent(txtDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(250, 250, 250))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTreatment, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnDelete)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnAddRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTreatment, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddRecord)
                            .addComponent(btnDelete))
                        .addGap(30, 30, 30))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearchMedicine)
                            .addComponent(txtSearchMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnReload))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(BackB)
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAddMedicine)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeleteMedicine)
                                .addGap(65, 65, 65))))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDiagnosisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiagnosisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiagnosisActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:        
        txtDiagnosis.setText("");
        txtTreatment.setText("");
        displayMedicine();
        medicineList.clear();
        displayPrescription();
        btnDeleteMedicine.setEnabled(false);
        btnAddMedicine.setEnabled(false);        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnDeleteMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMedicineActionPerformed
        // TODO add your handling code here:
        String dosage = (String)jTablePrescription.getValueAt(indexPrescription, 1);
        String medicineName = (String)jTablePrescription.getValueAt(indexPrescription, 0);
        String[] mname = medicineName.split("-", 2);
        String genericName = mname[0];
        String brandName = mname[1];
        
        PrescriptionMedicine m = new PrescriptionMedicine(genericName, brandName, dosage);
        Iterator<PrescriptionMedicine> iterator = medicineList.iterator();
        while (iterator.hasNext()) {
            PrescriptionMedicine item = iterator.next();
            if (item.getGenericName().equals(m.getGenericName()) && item.getBrand().equals(m.getBrand())) {
                iterator.remove();
                displayPrescription();
                return;
            }
        }
    }//GEN-LAST:event_btnDeleteMedicineActionPerformed

    private void btnAddMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMedicineActionPerformed
        // TODO add your handling code here:
        String genericName = (String)jTableMedicine.getValueAt(indexMedicine, 0);
        String brandName = (String)jTableMedicine.getValueAt(indexMedicine, 1);
        String dosage = (String)jTableMedicine.getValueAt(indexMedicine, 2);
        
        PrescriptionMedicine m = new PrescriptionMedicine(genericName, brandName, dosage);
        Iterator<PrescriptionMedicine> iterator = medicineList.iterator();
        while (iterator.hasNext()) {
            PrescriptionMedicine item = iterator.next();
            if (item.getGenericName().equals(m.getGenericName()) && item.getBrand().equals(m.getBrand())) {
                JOptionPane.showMessageDialog(null, "Medicine is already added.");
                return;
            }
        }
        medicineList.add(m);
        displayPrescription();
    }//GEN-LAST:event_btnAddMedicineActionPerformed

    private void jTablePrescriptionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePrescriptionMouseClicked
        // TODO add your handling code here:
        btnDeleteMedicine.setEnabled(true);
        
        indexPrescription = jTablePrescription.getSelectedRow();
      
        //JOptionPane.showMessageDialog(null, "Index of this is: " + index);
    }//GEN-LAST:event_jTablePrescriptionMouseClicked
    
    public void displaySearchMedicine(String input){
        ArrayList<Medicine> med = con.displaySearchMedicine(input);
        if(med == null){
            displayMedicine();
            txtSearchMedicine.setText("");
        } else {
            tblMedicine.setRowCount(0);
            for(Medicine m : med){
                String data[]={m.getGenericName(),m.getBrand(),m.getDosage()};
                tblMedicine.addRow(data);
            }
        }
    }
    
    private void btnSearchMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMedicineActionPerformed
        // TODO add your handling code here:
        displaySearchMedicine(txtSearchMedicine.getText());
    }//GEN-LAST:event_btnSearchMedicineActionPerformed

    private void txtSearchMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchMedicineActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtSearchMedicineActionPerformed

    private void btnAddRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRecordActionPerformed
        // TODO add your handling code here:
        String diagnosis = txtDiagnosis.getText();
        String treatment = txtTreatment.getText();

        //quantities
        Iterator<PrescriptionMedicine> iterator = medicineList.iterator();
        int size = medicineList.size(); //size sa Prescription table
        int quantity;
        for(int i = 0; i < size; i++){
            String quantityStr = (String) jTablePrescription.getValueAt(i, 2);
            quantity = Integer.parseInt(quantityStr);
            PrescriptionMedicine item = iterator.next();
            item.setQuantity(quantity);
        }

        int result = con.addMedicalRecord(patientID, treatment, diagnosis, medicineList);

        if(result == 1){
            JOptionPane.showMessageDialog(null, "PrescriptionID not found");
            return;
        } else if(result == 2){
            JOptionPane.showMessageDialog(null, "medicalRecordID not found");
            return;
        } else {
            JOptionPane.showMessageDialog(null, "Medical Record added successfully!");
        }
    }//GEN-LAST:event_btnAddRecordActionPerformed

    private void jTableMedicineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMedicineMouseClicked
        // TODO add your handling code here:
        btnAddMedicine.setEnabled(true);
        //btnDeleteMedicine.setEnabled(true);
        
        indexMedicine = jTableMedicine.getSelectedRow();
    }//GEN-LAST:event_jTableMedicineMouseClicked

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        // TODO add your handling code here:
        displayMedicine();
        txtSearchMedicine.setText("");
    }//GEN-LAST:event_btnReloadActionPerformed

    private void BackBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBActionPerformed
        // TODO add your handling code here:
        MRSMedicalRecordList m = new MRSMedicalRecordList(u, patientID);
        m.show();
        this.dispose();
    }//GEN-LAST:event_BackBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MRSAddMedicalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MRSAddMedicalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MRSAddMedicalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MRSAddMedicalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MRSAddMedicalRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackB;
    private javax.swing.JButton btnAddMedicine;
    private javax.swing.JButton btnAddRecord;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteMedicine;
    private javax.swing.JButton btnReload;
    private javax.swing.JButton btnSearchMedicine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableMedicine;
    private javax.swing.JTable jTablePrescription;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JTextField txtDiagnosis;
    private javax.swing.JTextField txtSearchMedicine;
    private javax.swing.JTextField txtTreatment;
    // End of variables declaration//GEN-END:variables
}
